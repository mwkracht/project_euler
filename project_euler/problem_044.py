"""
Project Euler - Problem 44
Copyright (c) Matthew Kracht. All rights reserved.

Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48,
is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are
pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
"""
import itertools
import math

from project_euler import utils


def brute_force_solution():
    """
    Search all possible combination of two terms in pentagonal sequnce to find smallest difference
    between two terms which satisfies requirements.
    """
    min_diff = None

    for k in itertools.count(2):
        k_term = utils.PentagonalNumbers.term(k)

        # If min_diff is smaller than Pk - Pk-1 then all future differences will be > min_diff
        if min_diff and min_diff > k_term - utils.PentagonalNumbers.term(k - 1):
            break

        for j in range(k - 1, 0, -1):
            j_term = utils.PentagonalNumbers.term(j)

            if min_diff and min_diff < k_term - j_term:
                # all subsequent diffs will be greater k_term - j_term so no need to continue loop
                break

            elif (
                    utils.PentagonalNumbers.has_term(k_term - j_term) and 
                    utils.PentagonalNumbers.has_term(k_term + j_term)
                ):
                min_diff = k_term - j_term

    return min_diff


SOLUTIONS = [
    brute_force_solution
]

